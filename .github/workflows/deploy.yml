name: Deploy to fly.io
on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '19'
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      - uses: actions/upload-artifact@v4  # Speichert das gebaute Frontend als Artifact
        with:
          name: frontend-build
          path: frontend/build/

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'adopt'
      - uses: actions/download-artifact@v4  # Lädt das gebaute Frontend herunter
        with:
          name: frontend-build
          path: backend/src/main/resources/static
      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml
      - uses: actions/upload-artifact@v4  # Speichert das gebaute Backend als Artifact
        with:
          name: gameapprs.jar
          path: backend/target/gameapprs.jar

  deploy-fly:
    runs-on: ubuntu-latest
    needs: build-backend
    environment:
      name: production-fly.io
      url: https://gameapprs.fly.dev/
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4  # Lädt das Backend-Artifact herunter
        with:
          name: gameapprs.jar
          path: backend/target
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Configure Swap Size  # Test für Speichergröße
        run: echo "swap_size_mb = 512" >> ~/.flyrc
      - run: flyctl deploy  # Deployment auf Fly.io starten
